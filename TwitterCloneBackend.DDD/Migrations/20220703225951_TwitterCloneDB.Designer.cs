// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TwitterCloneBackend.Entities;

#nullable disable

namespace TwitterCloneBackend.DDD.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220703225951_TwitterCloneDB")]
    partial class TwitterCloneDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TwitterCloneBackend.DDD.Models.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTimeDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTimeEntered")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Deleted")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("TwitterCloneBackend.DDD.Models.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTimeDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTimeEntered")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Deleted")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("TwitterCloneBackend.DDD.Models.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateTimeDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTimeEntered")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Deleted")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("TwitterCloneBackend.DDD.Models.Profile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Biography")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTimeDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTimeEntered")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Deleted")
                        .HasColumnType("tinyint");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProfileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("TwitterCloneBackend.DDD.Models.Replies", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateTimeDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTimeEntered")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Deleted")
                        .HasColumnType("tinyint");

                    b.Property<string>("RepliedComment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TweetId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TweetId");

                    b.ToTable("Replies");
                });

            modelBuilder.Entity("TwitterCloneBackend.DDD.Models.Tweet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateTimeDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTimeEntered")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Deleted")
                        .HasColumnType("tinyint");

                    b.Property<string>("MediaPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ReplyType")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TweetText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("Tweets");
                });

            modelBuilder.Entity("TwitterCloneBackend.DDD.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateTimeDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTimeEntered")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Deleted")
                        .HasColumnType("tinyint");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TwitterCloneBackend.DDD.Models.Location", b =>
                {
                    b.HasOne("TwitterCloneBackend.DDD.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TwitterCloneBackend.DDD.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("TwitterCloneBackend.DDD.Models.Profile", b =>
                {
                    b.HasOne("TwitterCloneBackend.DDD.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("TwitterCloneBackend.DDD.Models.Replies", b =>
                {
                    b.HasOne("TwitterCloneBackend.DDD.Models.Tweet", "Tweet")
                        .WithMany("Replies")
                        .HasForeignKey("TweetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tweet");
                });

            modelBuilder.Entity("TwitterCloneBackend.DDD.Models.Tweet", b =>
                {
                    b.HasOne("TwitterCloneBackend.DDD.Models.Profile", "Profile")
                        .WithMany("Tweets")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("TwitterCloneBackend.DDD.Models.User", b =>
                {
                    b.HasOne("TwitterCloneBackend.DDD.Models.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("TwitterCloneBackend.DDD.Models.Profile", b =>
                {
                    b.Navigation("Tweets");
                });

            modelBuilder.Entity("TwitterCloneBackend.DDD.Models.Tweet", b =>
                {
                    b.Navigation("Replies");
                });
#pragma warning restore 612, 618
        }
    }
}
